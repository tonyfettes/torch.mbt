// Generated by `wit-bindgen` 0.34.0.

let model : Ref[@mnist.Model] = Ref::new(@mnist.Model::new())

pub fn load(blob : String) -> Unit {
  model.val = try {
    blob |> @json.parse!() |> @json.from_json!()
  } catch {
    error => abort(Show::to_string(error))
  }
}

pub fn save() -> String {
  model.val.to_json().stringify()
}

pub fn infer(input : Bytes) -> FixedArray[Double] {
  let array = FixedArray::makei(input.length(), fn(i) { input[i].to_int() })
  @mnist.infer(model.val, array)
}

pub fn train(batch : FixedArray[@export.Data], learning_rate : Double) -> Double {
  let optimizer = @torch.SGD::new(model.val.parameters(), ~learning_rate)
  let batch = batch.map(
    fn(data) {
      @mnist.Data::{
        input: FixedArray::makei(
          data.input.length(),
          fn(i) { data.input[i].to_int() },
        ),
        label: data.label,
      }
    },
  )
  @mnist.train(model.val, optimizer, batch)
}
