// Generated by `wit-bindgen` 0.34.0.

let model : Ref[@mnist.Model] = Ref::new(@mnist.Model::new())

pub fn load(blob : String) -> Unit {
  model.val = try {
    blob |> @json.parse!() |> @json.from_json!()
  } catch {
    error => abort(Show::to_string(error))
  }
}

pub fn save() -> String {
  model.val.to_json().stringify()
}

pub fn infer(input : Bytes) -> FixedArray[Double] {
  let array = FixedArray::makei(input.length(), fn(i) { input[i].to_int() })
  @mnist.infer(model.val, array).map(fn(x) { x.to_double() })
}

pub fn train(
  batch : FixedArray[(Bytes, Int)],
  learning_rate : Double
) -> Double {
  let optimizer = @torch/optim.SGD::new(
    model.val.parameters(),
    learning_rate=learning_rate.to_float(),
  )
  let batch = batch.map(
    fn {
      (input, label) =>
        @mnist.Data::{
          input: FixedArray::makei(input.length(), fn(i) { input[i].to_int() }),
          label,
        }
    },
  )
  @mnist.train(model.val, optimizer, batch).to_double()
}
