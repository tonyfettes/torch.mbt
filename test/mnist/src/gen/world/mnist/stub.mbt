// Generated by `wit-bindgen` 0.34.0.

let model : Ref[@mnist.Model] = Ref::new(@mnist.Model::new())

pub fn load(blob : String) -> Unit {
  model.val = try {
    blob |> @json.parse!() |> @json.from_json!()
  } catch {
    error => abort(Show::to_string(error))
  }
}

pub fn save() -> String {
  model.val.to_json().stringify()
}

pub fn infer(input : FixedArray[Float]) -> FixedArray[Float] {
  @mnist.infer(model.val, input)
}

pub fn train(
  batch : FixedArray[(FixedArray[Float], Int)],
  learning_rate : Float
) -> Float {
  let optimizer = @torch/optim.SGD::new(model.val.parameters(), learning_rate~)
  let batch = batch.map(fn { (input, label) => @mnist.Data::{ input, label } })
  @mnist.train(model.val, optimizer, batch)
}
